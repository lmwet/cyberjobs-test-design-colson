{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/macbook/Desktop/test-cyberjobs-colson/src/components/CandidatePage/ApplyRow/ApplyButton/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Box, Button, Typography, Card, CardContent, Fab } from \"@material-ui/core\";\nimport DescriptionOutlinedIcon from \"@material-ui/icons/DescriptionOutlined\";\nimport OverlayCompany from \"../OverlayCompany\";\nconst useStyles = makeStyles(theme => ({\n  candidater: {\n    backgroundColor: \"#f4d47d\",\n    color: theme.palette.text.secondary,\n    textTransform: \"none\",\n    pointerEvents: \"pointer\"\n  },\n  icon: {\n    padding: \"10px\"\n  }\n}));\nconst closeModal = setIsShown(false);\n\nconst ApplyButton = () => {\n  _s();\n\n  const [isShown, setIsShown] = useState(false);\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Fab, {\n      variant: \"extended\",\n      className: classes.candidater,\n      onClick: () => setIsShown(true),\n      children: [\"Envoyer ma candidature \", /*#__PURE__*/_jsxDEV(DescriptionOutlinedIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), isShown && /*#__PURE__*/_jsxDEV(OverlayCompany, {\n      closeModal: closeModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ApplyButton, \"m5gxboILQC9y6Bkg9LlZc4CkJV8=\", false, function () {\n  return [useStyles];\n});\n\n_c = ApplyButton;\nexport default ApplyButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"ApplyButton\");","map":{"version":3,"sources":["/Users/macbook/Desktop/test-cyberjobs-colson/src/components/CandidatePage/ApplyRow/ApplyButton/index.js"],"names":["React","useState","makeStyles","Box","Button","Typography","Card","CardContent","Fab","DescriptionOutlinedIcon","OverlayCompany","useStyles","theme","candidater","backgroundColor","color","palette","text","secondary","textTransform","pointerEvents","icon","padding","closeModal","setIsShown","ApplyButton","isShown","classes"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SACEC,GADF,EAEEC,MAFF,EAGEC,UAHF,EAIEC,IAJF,EAKEC,WALF,EAMEC,GANF,QAOO,mBAPP;AAQA,OAAOC,uBAAP,MAAoC,wCAApC;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AAEA,MAAMC,SAAS,GAAGT,UAAU,CAAEU,KAAD,KAAY;AACvCC,EAAAA,UAAU,EAAE;AACVC,IAAAA,eAAe,EAAE,SADP;AAEVC,IAAAA,KAAK,EAAEH,KAAK,CAACI,OAAN,CAAcC,IAAd,CAAmBC,SAFhB;AAGVC,IAAAA,aAAa,EAAE,MAHL;AAIVC,IAAAA,aAAa,EAAE;AAJL,GAD2B;AAQvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE;AADL;AARiC,CAAZ,CAAD,CAA5B;AAaA,MAAMC,UAAU,GAAGC,UAAU,CAAC,KAAD,CAA7B;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,OAAD,EAAUF,UAAV,IAAwBvB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM0B,OAAO,GAAGhB,SAAS,EAAzB;AAEA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,GAAD;AACE,MAAA,OAAO,EAAC,UADV;AAEE,MAAA,SAAS,EAAEgB,OAAO,CAACd,UAFrB;AAGE,MAAA,OAAO,EAAE,MAAMW,UAAU,CAAC,IAAD,CAH3B;AAAA,yDAKyB,QAAC,uBAAD;AAAA;AAAA;AAAA;AAAA,cALzB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAQGE,OAAO,iBAAI,QAAC,cAAD;AAAgB,MAAA,UAAU,EAAEH;AAA5B;AAAA;AAAA;AAAA;AAAA,YARd;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAhBD;;GAAME,W;UAEYd,S;;;KAFZc,W;AAkBN,eAAeA,WAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport {\n  Box,\n  Button,\n  Typography,\n  Card,\n  CardContent,\n  Fab,\n} from \"@material-ui/core\";\nimport DescriptionOutlinedIcon from \"@material-ui/icons/DescriptionOutlined\";\nimport OverlayCompany from \"../OverlayCompany\";\n\nconst useStyles = makeStyles((theme) => ({\n  candidater: {\n    backgroundColor: \"#f4d47d\",\n    color: theme.palette.text.secondary,\n    textTransform: \"none\",\n    pointerEvents: \"pointer\",\n  },\n\n  icon: {\n    padding: \"10px\",\n  },\n}));\n\nconst closeModal = setIsShown(false);\n\nconst ApplyButton = () => {\n  const [isShown, setIsShown] = useState(false);\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <Fab\n        variant=\"extended\"\n        className={classes.candidater}\n        onClick={() => setIsShown(true)}\n      >\n        Envoyer ma candidature <DescriptionOutlinedIcon />\n      </Fab>\n      {isShown && <OverlayCompany closeModal={closeModal} />}\n    </React.Fragment>\n  );\n};\n\nexport default ApplyButton;\n"]},"metadata":{},"sourceType":"module"}